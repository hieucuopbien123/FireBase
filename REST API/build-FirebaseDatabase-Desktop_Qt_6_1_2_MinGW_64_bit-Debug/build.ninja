# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.19

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: FirebaseDatabase
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================
# Object build statements for EXECUTABLE target FirebaseDatabase


#############################################
# Order-only phony target for FirebaseDatabase

build cmake_object_order_depends_target_FirebaseDatabase: phony || FirebaseDatabase_autogen FirebaseDatabase_autogen/timestamp FirebaseDatabase_autogen_timestamp_deps

build CMakeFiles/FirebaseDatabase.dir/FirebaseDatabase_autogen/mocs_compilation.cpp.obj: CXX_COMPILER__FirebaseDatabase_Debug FirebaseDatabase_autogen/mocs_compilation.cpp || cmake_object_order_depends_target_FirebaseDatabase
  DEFINES = -DMINGW_HAS_SECURE_API=1 -DQT_CORE_LIB -DQT_NETWORK_LIB -DUNICODE -DWIN32 -DWIN64 -D_ENABLE_EXTENDED_ALIGNED_STORAGE -D_UNICODE -D_WIN32_WINNT=0x0601 -D_WIN64
  DEP_FILE = CMakeFiles\FirebaseDatabase.dir\FirebaseDatabase_autogen\mocs_compilation.cpp.obj.d
  FLAGS = -g -Wno-error=invalid-offsetof -std=gnu++17
  INCLUDES = -I. -I"B:/Firebase/REST API/FirebaseDatabase" -IFirebaseDatabase_autogen/include -IC:/Qt/Tools/OpenSSL/Win_x64/include -isystem C:/Qt/6.1.2/mingw81_64/include/QtCore -isystem C:/Qt/6.1.2/mingw81_64/include -isystem C:/Qt/6.1.2/mingw81_64/mkspecs/win32-g++ -isystem C:/Qt/6.1.2/mingw81_64/include/QtNetwork
  OBJECT_DIR = CMakeFiles\FirebaseDatabase.dir
  OBJECT_FILE_DIR = CMakeFiles\FirebaseDatabase.dir\FirebaseDatabase_autogen

build CMakeFiles/FirebaseDatabase.dir/main.cpp.obj: CXX_COMPILER__FirebaseDatabase_Debug B$:/Firebase/REST$ API/FirebaseDatabase/main.cpp || cmake_object_order_depends_target_FirebaseDatabase
  DEFINES = -DMINGW_HAS_SECURE_API=1 -DQT_CORE_LIB -DQT_NETWORK_LIB -DUNICODE -DWIN32 -DWIN64 -D_ENABLE_EXTENDED_ALIGNED_STORAGE -D_UNICODE -D_WIN32_WINNT=0x0601 -D_WIN64
  DEP_FILE = CMakeFiles\FirebaseDatabase.dir\main.cpp.obj.d
  FLAGS = -g -Wno-error=invalid-offsetof -std=gnu++17
  INCLUDES = -I. -I"B:/Firebase/REST API/FirebaseDatabase" -IFirebaseDatabase_autogen/include -IC:/Qt/Tools/OpenSSL/Win_x64/include -isystem C:/Qt/6.1.2/mingw81_64/include/QtCore -isystem C:/Qt/6.1.2/mingw81_64/include -isystem C:/Qt/6.1.2/mingw81_64/mkspecs/win32-g++ -isystem C:/Qt/6.1.2/mingw81_64/include/QtNetwork
  OBJECT_DIR = CMakeFiles\FirebaseDatabase.dir
  OBJECT_FILE_DIR = CMakeFiles\FirebaseDatabase.dir

build CMakeFiles/FirebaseDatabase.dir/databasehandler.cpp.obj: CXX_COMPILER__FirebaseDatabase_Debug B$:/Firebase/REST$ API/FirebaseDatabase/databasehandler.cpp || cmake_object_order_depends_target_FirebaseDatabase
  DEFINES = -DMINGW_HAS_SECURE_API=1 -DQT_CORE_LIB -DQT_NETWORK_LIB -DUNICODE -DWIN32 -DWIN64 -D_ENABLE_EXTENDED_ALIGNED_STORAGE -D_UNICODE -D_WIN32_WINNT=0x0601 -D_WIN64
  DEP_FILE = CMakeFiles\FirebaseDatabase.dir\databasehandler.cpp.obj.d
  FLAGS = -g -Wno-error=invalid-offsetof -std=gnu++17
  INCLUDES = -I. -I"B:/Firebase/REST API/FirebaseDatabase" -IFirebaseDatabase_autogen/include -IC:/Qt/Tools/OpenSSL/Win_x64/include -isystem C:/Qt/6.1.2/mingw81_64/include/QtCore -isystem C:/Qt/6.1.2/mingw81_64/include -isystem C:/Qt/6.1.2/mingw81_64/mkspecs/win32-g++ -isystem C:/Qt/6.1.2/mingw81_64/include/QtNetwork
  OBJECT_DIR = CMakeFiles\FirebaseDatabase.dir
  OBJECT_FILE_DIR = CMakeFiles\FirebaseDatabase.dir


# =============================================================================
# Link build statements for EXECUTABLE target FirebaseDatabase


#############################################
# Link the executable FirebaseDatabase.exe

build FirebaseDatabase.exe: CXX_EXECUTABLE_LINKER__FirebaseDatabase_Debug CMakeFiles/FirebaseDatabase.dir/FirebaseDatabase_autogen/mocs_compilation.cpp.obj CMakeFiles/FirebaseDatabase.dir/main.cpp.obj CMakeFiles/FirebaseDatabase.dir/databasehandler.cpp.obj | C$:/Qt/6.1.2/mingw81_64/lib/libQt6Network.a C$:/Qt/Tools/OpenSSL/Win_x64/lib/libssl.lib C$:/Qt/Tools/OpenSSL/Win_x64/lib/libcrypto.lib C$:/Qt/6.1.2/mingw81_64/lib/libQt6Core.a || FirebaseDatabase_autogen FirebaseDatabase_autogen_timestamp_deps
  FLAGS = -g
  LINK_LIBRARIES = C:/Qt/6.1.2/mingw81_64/lib/libQt6Network.a  C:/Qt/Tools/OpenSSL/Win_x64/lib/libssl.lib  C:/Qt/Tools/OpenSSL/Win_x64/lib/libcrypto.lib  C:/Qt/6.1.2/mingw81_64/lib/libQt6Core.a  -lmpr  -luserenv  -lws2_32  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = CMakeFiles\FirebaseDatabase.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_FILE = FirebaseDatabase.exe
  TARGET_IMPLIB = libFirebaseDatabase.dll.a
  TARGET_PDB = FirebaseDatabase.exe.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "B:\Firebase\REST API\build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug" && C:\Qt\Tools\CMake_64\bin\cmake-gui.exe -S"B:\Firebase\REST API\FirebaseDatabase" -B"B:\Firebase\REST API\build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug""
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cmd.exe /C "cd /D "B:\Firebase\REST API\build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug" && C:\Qt\Tools\CMake_64\bin\cmake.exe --regenerate-during-build -S"B:\Firebase\REST API\FirebaseDatabase" -B"B:\Firebase\REST API\build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util


#############################################
# Utility command for FirebaseDatabase_autogen_timestamp_deps

build FirebaseDatabase_autogen_timestamp_deps: phony CMakeFiles/FirebaseDatabase_autogen_timestamp_deps


#############################################
# Utility command for FirebaseDatabase_autogen

build FirebaseDatabase_autogen: phony CMakeFiles/FirebaseDatabase_autogen FirebaseDatabase_autogen/mocs_compilation.cpp FirebaseDatabase_autogen/timestamp FirebaseDatabase_autogen_timestamp_deps


#############################################
# Custom command for FirebaseDatabase_autogen\timestamp

build FirebaseDatabase_autogen/timestamp: CUSTOM_COMMAND C$:/Qt/6.1.2/mingw81_64/./bin/moc.exe || FirebaseDatabase_autogen_timestamp_deps
  COMMAND = cmd.exe /C "cd /D "B:\Firebase\REST API\build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug" && C:\Qt\Tools\CMake_64\bin\cmake.exe -E cmake_autogen "B:/Firebase/REST API/build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug/CMakeFiles/FirebaseDatabase_autogen.dir/AutogenInfo.json" Debug && C:\Qt\Tools\CMake_64\bin\cmake.exe -E touch "B:/Firebase/REST API/build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug/FirebaseDatabase_autogen/timestamp""
  DESC = Automatic MOC and UIC for target FirebaseDatabase
  depfile = B:/Firebase/REST API/build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug/FirebaseDatabase_autogen/deps
  restat = 1


#############################################
# Phony custom command for CMakeFiles\FirebaseDatabase_autogen_timestamp_deps

build CMakeFiles/FirebaseDatabase_autogen_timestamp_deps: phony C$:/Qt/6.1.2/mingw81_64/bin/Qt6Core.dll C$:/Qt/6.1.2/mingw81_64/bin/Qt6Network.dll C$:/Qt/6.1.2/mingw81_64/./bin/moc.exe


#############################################
# Phony custom command for CMakeFiles\FirebaseDatabase_autogen

build CMakeFiles/FirebaseDatabase_autogen FirebaseDatabase_autogen/mocs_compilation.cpp: phony FirebaseDatabase_autogen/timestamp || FirebaseDatabase_autogen_timestamp_deps

# =============================================================================
# Target aliases.

build FirebaseDatabase: phony FirebaseDatabase.exe

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: B:/Firebase/REST API/build-FirebaseDatabase-Desktop_Qt_6_1_2_MinGW_64_bit-Debug

build all: phony FirebaseDatabase.exe

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | B$:/Firebase/REST$ API/FirebaseDatabase/CMakeLists.txt C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsAdditionalTargetInfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsConfig.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsDependencies.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsTargets-relwithdebinfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsVersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreAdditionalTargetInfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreConfig.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreConfigExtras.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreDependencies.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreMacros.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreTargets-relwithdebinfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreVersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointAdditionalTargetInfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointConfig.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointTargets-relwithdebinfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointVersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkAdditionalTargetInfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkConfig.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkDependencies.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkTargets-relwithdebinfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkVersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/FindWrapAtomic.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/FindWrapOpenSSLHeaders.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6Config.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6ConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6Dependencies.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6Targets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6VersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/QtFeature.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/QtFeatureCommon.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeCXXInformation.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeCommonLanguageInclude.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeFindDependencyMacro.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeGenericSystem.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeInitializeConfigs.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeLanguageInformation.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeParseArguments.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeRCInformation.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeSystemSpecificInformation.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeSystemSpecificInitialize.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CheckCXXCompilerFlag.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CheckCXXSourceCompiles.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CheckIncludeFileCXX.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CheckLibraryExists.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Compiler/GNU-CXX.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Compiler/GNU.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/FindOpenSSL.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/FindPackageMessage.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/FindThreads.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Internal/CheckCompilerFlag.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Internal/CheckSourceCompiles.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows-GNU-CXX-ABI.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows-GNU-CXX.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows-GNU.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows-windres.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/WindowsPaths.cmake C$:/Qt/Tools/QtCreator/share/qtcreator/package-manager/auto-setup.cmake CMakeCache.txt CMakeFiles/3.19.2/CMakeCXXCompiler.cmake CMakeFiles/3.19.2/CMakeRCCompiler.cmake CMakeFiles/3.19.2/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build B$:/Firebase/REST$ API/FirebaseDatabase/CMakeLists.txt C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsAdditionalTargetInfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsConfig.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsDependencies.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsTargets-relwithdebinfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6CoreTools/Qt6CoreToolsVersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreAdditionalTargetInfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreConfig.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreConfigExtras.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreDependencies.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreMacros.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreTargets-relwithdebinfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Core/Qt6CoreVersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointAdditionalTargetInfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointConfig.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointTargets-relwithdebinfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6EntryPoint/Qt6EntryPointVersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkAdditionalTargetInfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkConfig.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkDependencies.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkTargets-relwithdebinfo.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6Network/Qt6NetworkVersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/FindWrapAtomic.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/FindWrapOpenSSLHeaders.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6Config.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6ConfigVersion.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6Dependencies.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6Targets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/Qt6VersionlessTargets.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/QtFeature.cmake C$:/Qt/6.1.2/mingw81_64/lib/cmake/Qt6/QtFeatureCommon.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeCXXInformation.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeCommonLanguageInclude.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeFindDependencyMacro.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeGenericSystem.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeInitializeConfigs.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeLanguageInformation.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeParseArguments.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeRCInformation.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeSystemSpecificInformation.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CMakeSystemSpecificInitialize.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CheckCXXCompilerFlag.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CheckCXXSourceCompiles.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CheckIncludeFileCXX.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/CheckLibraryExists.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Compiler/GNU-CXX.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Compiler/GNU.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/FindOpenSSL.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/FindPackageHandleStandardArgs.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/FindPackageMessage.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/FindThreads.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Internal/CheckCompilerFlag.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Internal/CheckSourceCompiles.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows-GNU-CXX-ABI.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows-GNU-CXX.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows-GNU.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows-windres.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/Windows.cmake C$:/Qt/Tools/CMake_64/share/cmake-3.19/Modules/Platform/WindowsPaths.cmake C$:/Qt/Tools/QtCreator/share/qtcreator/package-manager/auto-setup.cmake CMakeCache.txt CMakeFiles/3.19.2/CMakeCXXCompiler.cmake CMakeFiles/3.19.2/CMakeRCCompiler.cmake CMakeFiles/3.19.2/CMakeSystem.cmake: phony


#############################################
# Clean additional files.

build CMakeFiles/clean.additional: CLEAN_ADDITIONAL
  CONFIG = Debug


#############################################
# Clean all the built files.

build clean: CLEAN CMakeFiles/clean.additional


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
